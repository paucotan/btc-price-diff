{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n// Cache for storing API responses\nconst CACHE_KEY = 'btcPriceData';\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes cache\n\nconst useBtcPrice = (refreshInterval = 60000) => {\n  _s();\n  const [tickerItems, setTickerItems] = useState([{\n    id: 'btc-usd',\n    label: 'BTC/USD',\n    currentPrice: null,\n    priceChange24h: null,\n    currencySymbol: '$'\n  }, {\n    id: 'btc-eur',\n    label: 'BTC/EUR',\n    currentPrice: null,\n    priceChange24h: null,\n    currencySymbol: '€'\n  }, {\n    id: 'btc-eth',\n    label: 'BTC/ETH',\n    currentPrice: null,\n    priceChange24h: null,\n    currencySymbol: 'Ξ'\n  }, {\n    id: 'btc-gold',\n    label: 'Gold (oz)',\n    currentPrice: null,\n    priceChange24h: null,\n    currencySymbol: 'oz'\n  }]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const getCachedData = () => {\n    const cached = localStorage.getItem(CACHE_KEY);\n    if (!cached) return null;\n    try {\n      const {\n        data,\n        timestamp\n      } = JSON.parse(cached);\n      // Return cached data if it's still fresh\n      if (Date.now() - timestamp < CACHE_DURATION) {\n        return data;\n      }\n    } catch (e) {\n      console.error('Error reading cache:', e);\n    }\n    return null;\n  };\n  const saveToCache = data => {\n    try {\n      localStorage.setItem(CACHE_KEY, JSON.stringify({\n        data,\n        timestamp: Date.now()\n      }));\n    } catch (e) {\n      console.error('Error saving to cache:', e);\n    }\n  };\n  const fetchBtcPrice = async () => {\n    try {\n      var _eurUsdResponse$data$;\n      // Check cache first\n      const cachedData = getCachedData();\n      if (cachedData) {\n        setTickerItems(cachedData.items);\n        setLastUpdated(cachedData.lastUpdated);\n        setIsLoading(false);\n        setError(null);\n        return; // Use cached data if available\n      }\n      setIsLoading(true);\n      setError(null);\n\n      // Fetch BTC prices with rate limit handling\n      const [btcResponse, ethResponse, goldResponse, eurUsdResponse] = await Promise.all([\n      // BTC/USD and BTC/EUR\n      axios.get('https://api.coingecko.com/api/v3/simple/price', {\n        params: {\n          ids: 'bitcoin',\n          vs_currencies: 'usd,eur',\n          include_24hr_change: true\n        }\n      }),\n      // ETH/USD for BTC/ETH conversion\n      axios.get('https://api.coingecko.com/api/v3/simple/price', {\n        params: {\n          ids: 'ethereum',\n          vs_currencies: 'usd',\n          include_24hr_change: true\n        }\n      }),\n      // Gold price in USD (approximate)\n      axios.get('https://api.coingecko.com/api/v3/simple/price', {\n        params: {\n          ids: 'pax-gold',\n          vs_currencies: 'usd'\n        }\n      }),\n      // EUR/USD rate for better accuracy\n      axios.get('https://api.coingecko.com/api/v3/simple/price', {\n        params: {\n          ids: 'tether-eurt',\n          vs_currencies: 'usd'\n        }\n      })]);\n      const btcData = btcResponse.data.bitcoin;\n      const ethData = ethResponse.data.ethereum;\n      const goldData = goldResponse.data['pax-gold'];\n      const eurUsdRate = ((_eurUsdResponse$data$ = eurUsdResponse.data['tether-eurt']) === null || _eurUsdResponse$data$ === void 0 ? void 0 : _eurUsdResponse$data$.usd) || 1.0; // Fallback to 1.0 if API fails\n\n      // Calculate BTC/ETH price\n      const btcEthPrice = btcData.usd / ethData.usd;\n      const btcEthChange24h = (btcData.usd_24h_change - ethData.usd_24h_change) / (1 + ethData.usd_24h_change / 100) || 0;\n\n      // Calculate BTC/Gold price (gold price is per gram, converting to oz)\n      const goldPricePerOz = goldData.usd * 31.1; // 1 oz = 31.1 grams\n      const btcGoldPrice = btcData.usd / goldPricePerOz;\n\n      // Update ticker items with new data\n      setTickerItems(prevItems => prevItems.map(item => {\n        switch (item.id) {\n          case 'btc-usd':\n            return {\n              ...item,\n              currentPrice: btcData.usd,\n              priceChange24h: btcData.usd_24h_change\n            };\n          case 'btc-eur':\n            return {\n              ...item,\n              currentPrice: btcData.eur,\n              priceChange24h: btcData.eur_24h_change\n            };\n          case 'btc-eth':\n            return {\n              ...item,\n              currentPrice: btcEthPrice,\n              priceChange24h: btcEthChange24h\n            };\n          case 'btc-gold':\n            return {\n              ...item,\n              currentPrice: btcGoldPrice,\n              priceChange24h: btcData.usd_24h_change\n            };\n          default:\n            return item;\n        }\n      }));\n      const result = {\n        items: tickerItems.map(item => ({\n          ...item,\n          currentPrice: item.id === 'btc-usd' ? btcData.usd : item.id === 'btc-eur' ? btcData.eur : item.id === 'btc-eth' ? btcEthPrice : item.id === 'btc-gold' ? btcGoldPrice : item.currentPrice,\n          priceChange24h: item.id === 'btc-eth' ? btcEthChange24h : item.id === 'btc-usd' ? btcData.usd_24h_change : item.id === 'btc-eur' ? btcData.eur_24h_change : item.id === 'btc-gold' ? btcData.usd_24h_change : item.priceChange24h\n        })),\n        isLoading: false,\n        error: null,\n        lastUpdated: Date.now()\n      };\n      setTickerItems(result.items);\n      setLastUpdated(result.lastUpdated);\n      saveToCache(result);\n    } catch (err) {\n      console.error('Error fetching price data:', err);\n      setError('Failed to fetch price data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Initial fetch\n    fetchBtcPrice();\n\n    // Set up interval for refreshing data\n    const intervalId = setInterval(fetchBtcPrice, refreshInterval);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [refreshInterval]);\n  return {\n    items: tickerItems,\n    isLoading,\n    error,\n    lastUpdated\n  };\n};\n_s(useBtcPrice, \"jVASKfenFuG2c2tWo/skcIOyZno=\");\nexport default useBtcPrice;","map":{"version":3,"names":["useState","useEffect","axios","CACHE_KEY","CACHE_DURATION","useBtcPrice","refreshInterval","_s","tickerItems","setTickerItems","id","label","currentPrice","priceChange24h","currencySymbol","isLoading","setIsLoading","error","setError","lastUpdated","setLastUpdated","getCachedData","cached","localStorage","getItem","data","timestamp","JSON","parse","Date","now","e","console","saveToCache","setItem","stringify","fetchBtcPrice","_eurUsdResponse$data$","cachedData","items","btcResponse","ethResponse","goldResponse","eurUsdResponse","Promise","all","get","params","ids","vs_currencies","include_24hr_change","btcData","bitcoin","ethData","ethereum","goldData","eurUsdRate","usd","btcEthPrice","btcEthChange24h","usd_24h_change","goldPricePerOz","btcGoldPrice","prevItems","map","item","eur","eur_24h_change","result","err","intervalId","setInterval","clearInterval"],"sources":["/Users/ocean/code/paucotan/personal_projects/btc-price-diff/src/components/LiveBtcPrice/useBtcPrice.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport interface TickerItem {\n  id: string;\n  label: string;\n  currentPrice: number | null;\n  priceChange24h: number | null;\n  currencySymbol?: string;\n}\n\ninterface BtcPriceData {\n  items: TickerItem[];\n  isLoading: boolean;\n  error: string | null;\n  lastUpdated: number | null;\n}\n\n// Cache for storing API responses\nconst CACHE_KEY = 'btcPriceData';\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes cache\n\nconst useBtcPrice = (refreshInterval = 60000): BtcPriceData => {\n  const [tickerItems, setTickerItems] = useState<TickerItem[]>([\n    { id: 'btc-usd', label: 'BTC/USD', currentPrice: null, priceChange24h: null, currencySymbol: '$' },\n    { id: 'btc-eur', label: 'BTC/EUR', currentPrice: null, priceChange24h: null, currencySymbol: '€' },\n    { id: 'btc-eth', label: 'BTC/ETH', currentPrice: null, priceChange24h: null, currencySymbol: 'Ξ' },\n    { id: 'btc-gold', label: 'Gold (oz)', currentPrice: null, priceChange24h: null, currencySymbol: 'oz' },\n  ]);\n  \n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdated, setLastUpdated] = useState<number | null>(null);\n\n  const getCachedData = (): BtcPriceData | null => {\n    const cached = localStorage.getItem(CACHE_KEY);\n    if (!cached) return null;\n    \n    try {\n      const { data, timestamp } = JSON.parse(cached);\n      // Return cached data if it's still fresh\n      if (Date.now() - timestamp < CACHE_DURATION) {\n        return data;\n      }\n    } catch (e) {\n      console.error('Error reading cache:', e);\n    }\n    return null;\n  };\n\n  const saveToCache = (data: BtcPriceData) => {\n    try {\n      localStorage.setItem(CACHE_KEY, JSON.stringify({\n        data,\n        timestamp: Date.now()\n      }));\n    } catch (e) {\n      console.error('Error saving to cache:', e);\n    }\n  };\n\n  const fetchBtcPrice = async () => {\n    try {\n      // Check cache first\n      const cachedData = getCachedData();\n      if (cachedData) {\n        setTickerItems(cachedData.items);\n        setLastUpdated(cachedData.lastUpdated);\n        setIsLoading(false);\n        setError(null);\n        return; // Use cached data if available\n      }\n\n      setIsLoading(true);\n      setError(null);\n      \n      // Fetch BTC prices with rate limit handling\n      const [btcResponse, ethResponse, goldResponse, eurUsdResponse] = await Promise.all([\n        // BTC/USD and BTC/EUR\n        axios.get('https://api.coingecko.com/api/v3/simple/price', {\n          params: {\n            ids: 'bitcoin',\n            vs_currencies: 'usd,eur',\n            include_24hr_change: true,\n          },\n        }),\n        // ETH/USD for BTC/ETH conversion\n        axios.get('https://api.coingecko.com/api/v3/simple/price', {\n          params: {\n            ids: 'ethereum',\n            vs_currencies: 'usd',\n            include_24hr_change: true,\n          },\n        }),\n        // Gold price in USD (approximate)\n        axios.get('https://api.coingecko.com/api/v3/simple/price', {\n          params: {\n            ids: 'pax-gold',\n            vs_currencies: 'usd',\n          },\n        }),\n        // EUR/USD rate for better accuracy\n        axios.get('https://api.coingecko.com/api/v3/simple/price', {\n          params: {\n            ids: 'tether-eurt',\n            vs_currencies: 'usd',\n          },\n        }),\n      ]);\n\n      const btcData = btcResponse.data.bitcoin;\n      const ethData = ethResponse.data.ethereum;\n      const goldData = goldResponse.data['pax-gold'];\n      const eurUsdRate = eurUsdResponse.data['tether-eurt']?.usd || 1.0; // Fallback to 1.0 if API fails\n\n      // Calculate BTC/ETH price\n      const btcEthPrice = btcData.usd / ethData.usd;\n      const btcEthChange24h = ((btcData.usd_24h_change - ethData.usd_24h_change) / \n        (1 + ethData.usd_24h_change / 100)) || 0;\n\n      // Calculate BTC/Gold price (gold price is per gram, converting to oz)\n      const goldPricePerOz = goldData.usd * 31.1; // 1 oz = 31.1 grams\n      const btcGoldPrice = btcData.usd / goldPricePerOz;\n      \n      // Update ticker items with new data\n      setTickerItems(prevItems => prevItems.map(item => {\n        switch (item.id) {\n          case 'btc-usd':\n            return { ...item, currentPrice: btcData.usd, priceChange24h: btcData.usd_24h_change };\n          case 'btc-eur':\n            return { ...item, currentPrice: btcData.eur, priceChange24h: btcData.eur_24h_change };\n          case 'btc-eth':\n            return { ...item, currentPrice: btcEthPrice, priceChange24h: btcEthChange24h };\n          case 'btc-gold':\n            return { ...item, currentPrice: btcGoldPrice, priceChange24h: btcData.usd_24h_change };\n          default:\n            return item;\n        }\n      }));\n      \n      const result = {\n        items: tickerItems.map(item => ({\n          ...item,\n          currentPrice: item.id === 'btc-usd' ? btcData.usd : \n                        item.id === 'btc-eur' ? btcData.eur :\n                        item.id === 'btc-eth' ? btcEthPrice :\n                        item.id === 'btc-gold' ? btcGoldPrice : item.currentPrice,\n          priceChange24h: item.id === 'btc-eth' ? btcEthChange24h : \n                          item.id === 'btc-usd' ? btcData.usd_24h_change :\n                          item.id === 'btc-eur' ? btcData.eur_24h_change :\n                          item.id === 'btc-gold' ? btcData.usd_24h_change : item.priceChange24h\n        })),\n        isLoading: false,\n        error: null,\n        lastUpdated: Date.now()\n      };\n      \n      setTickerItems(result.items);\n      setLastUpdated(result.lastUpdated);\n      saveToCache(result);\n    } catch (err) {\n      console.error('Error fetching price data:', err);\n      setError('Failed to fetch price data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Initial fetch\n    fetchBtcPrice();\n\n    // Set up interval for refreshing data\n    const intervalId = setInterval(fetchBtcPrice, refreshInterval);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [refreshInterval]);\n\n  return {\n    items: tickerItems,\n    isLoading,\n    error,\n    lastUpdated,\n  };\n};\n\nexport default useBtcPrice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}