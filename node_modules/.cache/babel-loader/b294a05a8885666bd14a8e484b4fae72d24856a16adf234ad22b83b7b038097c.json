{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useBtcPrice = (refreshInterval = 60000) => {\n  _s();\n  const [priceData, setPriceData] = useState({\n    currentPrice: null,\n    priceChange24h: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchBtcPrice = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await axios.get('https://api.coingecko.com/api/v3/simple/price', {\n        params: {\n          ids: 'bitcoin',\n          vs_currencies: 'usd',\n          include_24hr_change: true\n        }\n      });\n      const {\n        bitcoin\n      } = response.data;\n      setPriceData({\n        currentPrice: bitcoin.usd,\n        priceChange24h: bitcoin.usd_24h_change\n      });\n    } catch (err) {\n      console.error('Error fetching BTC price:', err);\n      setError('Failed to fetch BTC price. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Initial fetch\n    fetchBtcPrice();\n\n    // Set up polling\n    const intervalId = setInterval(fetchBtcPrice, refreshInterval);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [refreshInterval]);\n  return {\n    currentPrice: priceData.currentPrice,\n    priceChange24h: priceData.priceChange24h,\n    isLoading,\n    error\n  };\n};\n_s(useBtcPrice, \"vO/bG/XrRWi8H3dIMjS/U5MBa80=\");\nexport default useBtcPrice;","map":{"version":3,"names":["useState","useEffect","axios","useBtcPrice","refreshInterval","_s","priceData","setPriceData","currentPrice","priceChange24h","isLoading","setIsLoading","error","setError","fetchBtcPrice","response","get","params","ids","vs_currencies","include_24hr_change","bitcoin","data","usd","usd_24h_change","err","console","intervalId","setInterval","clearInterval"],"sources":["/Users/ocean/code/paucotan/personal_projects/btc-price-diff/src/components/LiveBtcPrice/useBtcPrice.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface BtcPriceData {\n  currentPrice: number | null;\n  priceChange24h: number | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst useBtcPrice = (refreshInterval = 60000): BtcPriceData => {\n  const [priceData, setPriceData] = useState<{\n    currentPrice: number | null;\n    priceChange24h: number | null;\n  }>({\n    currentPrice: null,\n    priceChange24h: null,\n  });\n  \n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchBtcPrice = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await axios.get(\n        'https://api.coingecko.com/api/v3/simple/price',\n        {\n          params: {\n            ids: 'bitcoin',\n            vs_currencies: 'usd',\n            include_24hr_change: true,\n          },\n        }\n      );\n\n      const { bitcoin } = response.data;\n      setPriceData({\n        currentPrice: bitcoin.usd,\n        priceChange24h: bitcoin.usd_24h_change,\n      });\n    } catch (err) {\n      console.error('Error fetching BTC price:', err);\n      setError('Failed to fetch BTC price. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Initial fetch\n    fetchBtcPrice();\n\n    // Set up polling\n    const intervalId = setInterval(fetchBtcPrice, refreshInterval);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, [refreshInterval]);\n\n  return {\n    currentPrice: priceData.currentPrice,\n    priceChange24h: priceData.priceChange24h,\n    isLoading,\n    error,\n  };\n};\n\nexport default useBtcPrice;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AASzB,MAAMC,WAAW,GAAGA,CAACC,eAAe,GAAG,KAAK,KAAmB;EAAAC,EAAA;EAC7D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAGvC;IACDQ,YAAY,EAAE,IAAI;IAClBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAU,IAAI,CAAC;EACzD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFH,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC9B,+CAA+C,EAC/C;QACEC,MAAM,EAAE;UACNC,GAAG,EAAE,SAAS;UACdC,aAAa,EAAE,KAAK;UACpBC,mBAAmB,EAAE;QACvB;MACF,CACF,CAAC;MAED,MAAM;QAAEC;MAAQ,CAAC,GAAGN,QAAQ,CAACO,IAAI;MACjCf,YAAY,CAAC;QACXC,YAAY,EAAEa,OAAO,CAACE,GAAG;QACzBd,cAAc,EAAEY,OAAO,CAACG;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACd,KAAK,CAAC,2BAA2B,EAAEa,GAAG,CAAC;MAC/CZ,QAAQ,CAAC,oDAAoD,CAAC;IAChE,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd;IACAa,aAAa,CAAC,CAAC;;IAEf;IACA,MAAMa,UAAU,GAAGC,WAAW,CAACd,aAAa,EAAEV,eAAe,CAAC;;IAE9D;IACA,OAAO,MAAMyB,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACvB,eAAe,CAAC,CAAC;EAErB,OAAO;IACLI,YAAY,EAAEF,SAAS,CAACE,YAAY;IACpCC,cAAc,EAAEH,SAAS,CAACG,cAAc;IACxCC,SAAS;IACTE;EACF,CAAC;AACH,CAAC;AAACP,EAAA,CA1DIF,WAAW;AA4DjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}